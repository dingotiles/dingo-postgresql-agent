---
groups:
- name: images
  jobs: [test-agent, rc, build-image, test-image, shipit, minor, major, patch, docker-machine-setup]
- name: madlib
  jobs: [test-agent, rc, base-image, pg95-base-madlib-image, build-madlib-image, test-madlib-image, shipit]
- name: base-images
  jobs: [base-image, pg95-base-image, pg96-base-image, pg95-base-madlib-image]
- name: ci-image
  jobs: [build-task-image]

jobs:
- name: test-agent
  public: true
  plan:
    - {get: agent, trigger: true}
    - {get: agent-ci}
    - task: test-agent
      file: agent-ci/ci/tasks/test-agent.yml

- name: rc
  public: true
  plan:
    - {get: agent, passed: [test-agent], trigger: true}
    - {get: wale-fork, trigger: true}
    - {get: version, params: {pre: rc}}
    - {put: version, params: {file: version/number}}

- name: build-image
  public: true
  serial: true
  plan:
    - aggregate:
      - {get: agent-ci}
      - {get: agent, passed: [rc]}
      - {get: version, passed: [rc], trigger: true}
    - put: pg95-image
      params:
        build: agent
        # cache: true -- causing https://ci.starkandwayne.com/teams/main/pipelines/dingo-postgresql-agent/jobs/build-image/builds/16
        tag: agent-ci/ci/tags/pre-test

- name: build-madlib-image
  public: true
  serial: true
  plan:
    - aggregate:
      - {get: agent-ci}
      - {get: agent, passed: [rc]}
      - {get: version, passed: [rc], trigger: true}
      - {get: pg95-base-madlib-image, passed: [pg95-base-madlib-image], trigger: true, params: {skip_download: true}}
    - put: pg95-madlib-image
      params:
        build: agent
        dockerfile: agent/Dockerfile.madlib
        tag: agent-ci/ci/tags/pre-test

- name: test-image
  serial_groups: [delmo]
  plan:
  - aggregate:
    - {get: agent-ci}
    - {get: agent, passed: [build-image]}
    - {get: pg95-image, passed: [build-image], trigger: true, params: {skip_download: true}}
    - {get: version, passed: [build-image]}
  - task: prepare-delmo-docker-compose
    file: agent-ci/ci/tasks/prepare-delmo-docker-compose.yml
    params:
      image_name_tag: dingotiles/dingo-postgresql:pre-test
  - task: run-ssh-delmo-test
    file: agent-ci/ci/tasks/run-delmo-test.yml
    params:
      MACHINE_EXPORT_AWS_ACCESS_KEY_ID: {{docker-machine-access-key-id}}
      MACHINE_EXPORT_AWS_SECRET_ACCESS_KEY: {{docker-machine-secret-access-key}}
      MACHINE_EXPORT_AWS_REGION: {{docker-machine-region}}
      MACHINE_EXPORT_AWS_BUCKET: {{docker-machine-bucket}}
  - task: run-s3-delmo-test
    file: agent-ci/ci/tasks/run-delmo-test.yml
    params:
      MACHINE_EXPORT_AWS_ACCESS_KEY_ID: {{docker-machine-access-key-id}}
      MACHINE_EXPORT_AWS_SECRET_ACCESS_KEY: {{docker-machine-secret-access-key}}
      MACHINE_EXPORT_AWS_REGION: {{docker-machine-region}}
      MACHINE_EXPORT_AWS_BUCKET: {{docker-machine-bucket}}
      AWS_ACCESS_KEY_ID: {{delmo-aws-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{delmo-aws-secret-access-key}}
      AWS_REGION: {{delmo-aws-bucket-region}}
      WALE_S3_ENDPOINT: {{delmo-aws-bucket-endpoint}}
      WAL_S3_BUCKET: {{delmo-s3-bucket}}
  - put: pg95-image
    params:
      pull_repository: dingotiles/dingo-postgresql
      pull_tag: pre-test
      cache: true
      tag: agent-ci/ci/tags/tested

- name: test-madlib-image
  serial_groups: [delmo]
  plan:
  - aggregate:
    - {get: agent-ci}
    - {get: agent, passed: [build-madlib-image]}
    - {get: pg95-madlib-image, passed: [build-madlib-image], trigger: true, params: {skip_download: true}}
    - {get: version, passed: [build-madlib-image]}
  - task: prepare-delmo-docker-compose
    file: agent-ci/ci/tasks/prepare-delmo-docker-compose.yml
    params:
      image_name_tag: dingotiles/dingo-postgresql-madlib:pre-test
  - task: run-ssh-delmo-test
    file: agent-ci/ci/tasks/run-delmo-test.yml
    params:
      MACHINE_EXPORT_AWS_ACCESS_KEY_ID: {{docker-machine-access-key-id}}
      MACHINE_EXPORT_AWS_SECRET_ACCESS_KEY: {{docker-machine-secret-access-key}}
      MACHINE_EXPORT_AWS_REGION: {{docker-machine-region}}
      MACHINE_EXPORT_AWS_BUCKET: {{docker-machine-bucket}}
  - put: pg95-madlib-image
    params:
      pull_repository: dingotiles/dingo-postgresql-madlib
      pull_tag: pre-test
      cache: true
      tag: agent-ci/ci/tags/tested

- name: shipit
  public: true
  serial: true
  plan:
    - aggregate:
      - {get: image, resource: pg95-image, passed: [test-image], params: {skip_download: true}}
      - {get: madlib-image, resource: pg95-madlib-image, passed: [test-madlib-image], params: {skip_download: true}}
      - {get: agent-ci}
      - {get: agent, passed: [test-image, test-madlib-image]}
      - {get: version, passed: [test-image, test-madlib-image], params: {bump: final}}
    - {put: version, params: {file: version/number}}
    - aggregate:
      - do:
        - task: dockerfile-versioned
          file: agent-ci/ci/tasks/dockerfile-versioned.yml
        - aggregate:
          - put: pg95-image
            params:
              build: dockerfile
              tag: version/number
              tag_prefix: v
          - put: pg95-image
            params:
              build: dockerfile
      - do:
        - task: dockerfile-versioned
          file: agent-ci/ci/tasks/dockerfile-versioned.yml
          input_mapping: {image: madlib-image}
          params:
            image_name: dingotiles/dingo-postgresql-madlib
        - aggregate:
          - put: pg95-madlib-image
            params:
              build: dockerfile
              tag: version/number
              tag_prefix: v
          - put: pg95-madlib-image
            params:
              build: dockerfile
    - task: generate-commitish
      file: agent-ci/ci/tasks/generate-commitish.yml
    - task: create-release-notes
      file: agent-ci/ci/tasks/create-release-notes.yml
    - put: github-release
      params:
        name: release-notes/release-name
        tag: release-notes/release-name
        body: release-notes/notes.md
        commitish: generated-commitish/commitish

- name: major
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: major, pre: rc}
  - put: version
    params: {file: version/number}

- name: minor
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: minor, pre: rc}
  - put: version
    params: {file: version/number}

- name: patch
  public: true
  serial_groups: [version]
  plan:
  - get: version
    passed: [shipit]
    trigger: true
    params: {bump: patch, pre: rc}
  - put: version
    params: {file: version/number}

- name: base-image
  public: true
  serial: true
  plan:
  - aggregate:
    - {get: agent-ci}
    - {get: wal-e, resource: wale-fork, trigger: true}
  - task: custom-wal-e
    file: agent-ci/ci/tasks/custom-wal-e.yml
    params: {dockerfile_dir: agent-ci/images/base}
  - put: base-image
    params:
      build: dockerfile
      cache: true

- name: pg95-base-image
  public: true
  serial: true
  plan:
  - aggregate:
    - {get: agent-ci}
    - {get: base-image, passed: [base-image], trigger: true, params: {skip_download: true}}
  - put: pg95-base-image
    params:
      build: agent-ci/images/postgresql95-base
      cache: true

- name: pg96-base-image
  public: true
  serial: true
  plan:
  - aggregate:
    - {get: agent-ci}
    - {get: wal-e, resource: wale-fork, trigger: true}
  - task: custom-wal-e
    file: agent-ci/ci/tasks/custom-wal-e.yml
    params: {dockerfile_dir: agent-ci/images/postgresql96-base}
  - put: pg96-base-image
    params:
      build: dockerfile
      cache: true

- name: pg95-base-madlib-image
  public: true
  serial: true
  plan:
    - aggregate:
      - {get: agent-ci}
      - {get: base-image, passed: [base-image], trigger: true, params: {skip_download: true}}
    - put: pg95-base-madlib-image
      params:
        build: agent-ci/images/postgresql95-madlib-base

- name: build-task-image
  public: true
  serial: true
  plan:
  - {get: agent-ci-task, trigger: true}
  - put: docker-image-ci
    params:
      build: agent-ci-task/ci/ci_image

- name: docker-machine-setup
  serial: true
  serial_groups: [delmo]
  plan:
  - get: agent-ci
  - task: docker-machine-setup
    file: agent-ci/ci/tasks/docker-machine-setup.yml
    params:
      AWS_ACCESS_KEY_ID: {{docker-machine-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{docker-machine-secret-access-key}}
      AWS_DEFAULT_REGION: {{docker-machine-region}}
      AWS_VPC_ID: {{docker-machine-vpc-id}}
      AWS_SUBNET_ID: {{docker-machine-subnet-id}}
      AWS_ZONE: {{docker-machine-az-zone}}
      AWS_BUCKET: {{docker-machine-bucket}}
      AWS_SECURITY_GROUP: {{docker-machine-security-group}}
      AWS_AMI: ami-fd6e3bea

resources:
- name: agent
  type: git
  source:
    uri: git@github.com:dingotiles/dingo-postgresql-agent.git
    branch: {{pipeline-branch}}
    private_key: {{github-private-key}}

- name: agent-ci
  type: git
  source:
    uri: git@github.com:dingotiles/dingo-postgresql-agent.git
    branch: {{pipeline-branch}}
    private_key: {{github-private-key}}

- name: agent-ci-task
  type: git
  source:
    uri: git@github.com:dingotiles/dingo-postgresql-agent.git
    branch: {{pipeline-branch}}
    private_key: {{github-private-key}}
    paths: [ci/ci_image/*]

- name: pg95-image
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: dingotiles/dingo-postgresql
    tag: latest

- name: pg95-base-madlib-image
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: dingotiles/dingo-postgresql-madlib-base
    tag: latest

- name: pg95-madlib-image
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: dingotiles/dingo-postgresql-madlib
    tag: latest

- name: base-image
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: dingotiles/dingo-postgresql-base
    tag: latest

- name: pg95-base-image
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: dingotiles/dingo-postgresql95-agent-base
    tag: latest

- name: pg96-base-image
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: dingotiles/dingo-postgresql96-agent-base
    tag: latest

- name: docker-image-ci
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: dingotiles/dingo-postgresql-agent-pipeline

- name: version
  type: semver
  source:
    driver: git
    initial_version: 0.0.1
    uri: git@github.com:dingotiles/dingo-postgresql-agent.git
    branch: version
    file: version
    private_key: {{github-private-key}}

- name: wale-fork
  type: git
  source:
    uri: https://github.com/drnic/wal-e.git
    branch: ssh_strategy
    private_key: {{github-private-key}}

- name: github-release
  type: github-release
  source:
    access_token: {{github-release-access-token}}
    user: dingotiles
    repository: dingo-postgresql-agent
