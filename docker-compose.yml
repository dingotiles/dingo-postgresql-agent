version: '2'

services:
  test-api:
    build: .
    image: dingotiles/dingo-postgresql96-agent:latest
    container_name: test-api
    ports: ["5000:8008"]
    environment:
      PATRONI_SCOPE: test-cluster-scope
      PORT: 8008
      ETCD_HOST_PORT: ${DOCKER_HOST_IP}:4001
      AWS_ACCESS_KEY_ID: ~
      AWS_SECRET_ACCESS_KEY: ~
      WAL_S3_BUCKET: ~
      AWS_REGION: ~
      WALE_S3_ENDPOINT: ~
      WALE_S3_PREFIX: ~
    command: [dingo-postgresql-agent, test-api]
  patroni1:
    build: .
    image: dingotiles/dingo-postgresql96-agent:latest
    container_name: patroni1
    ports: ["5001:5432", "8001:8008"]
    environment:
      # DEBUG: 1
      DINGO_STARTUP_URI: http://${DOCKER_HOST_IP}:5000
      DINGO_STARTUP_PATRONI_DEFAULT_PATH: /patroni/patroni-default-values.yml
      # in lieu of registrator, pass known host config as env vars
      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
      DOCKER_HOST_PORT_5432: 5001
      DOCKER_HOST_PORT_8008: 8001
    depends_on: [etcd]
    # depends_on: [registrator, etcd]
    # command: ["dingo-postgresql-agent", "run"]
    command: ["/scripts/entry.sh"]
  patroni2:
    build: .
    image: dingotiles/dingo-postgresql96-agent:latest
    container_name: patroni2
    ports: ["5002:5432", "8002:8008"]
    environment:
      # DEBUG: 1
      DINGO_STARTUP_URI: http://${DOCKER_HOST_IP}:5000
      DINGO_STARTUP_PATRONI_DEFAULT_PATH: /patroni/patroni-default-values.yml
      # in lieu of registrator, pass known host config as env vars
      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
      DOCKER_HOST_PORT_5432: 5002
      DOCKER_HOST_PORT_8008: 8002
    depends_on: [etcd]
    # depends_on: [registrator, etcd]
    # command: ["dingo-postgresql-agent", "run"]
    command: ["/scripts/entry.sh"]
  etcd:
    image: quay.io/coreos/etcd:v2.3.7
    ports: ["4001:4001", "2380:2380", "2379:2379"]
    command:
    - -name=etcd0
    - -advertise-client-urls=http://${DOCKER_HOST_IP}:2379,http://${DOCKER_HOST_IP}:4001
    - -listen-client-urls=http://0.0.0.0:2379,http://0.0.0.0:4001
    - -initial-advertise-peer-urls=http://${DOCKER_HOST_IP}:2380
    - -listen-peer-urls=http://0.0.0.0:2380
    - -initial-cluster-token=etcd-cluster-1
    - -initial-cluster=etcd0=http://${DOCKER_HOST_IP}:2380
    - -initial-cluster-state=new
  # registrator:
  #   image: cfcommunity/registrator:latest
  #   network_mode: "host"
  #   volumes:
  #   - /var/run/docker.sock:/tmp/docker.sock
  #   command: /bin/registrator -hostname ${DOCKER_HOST_IP} -ip ${DOCKER_HOST_IP} etcd://${DOCKER_HOST_IP}:4001
  #   depends_on: [etcd]

  tests:
    build: ./images/tests/
    image: dingotiles/dingo-pg-agent-container-tests
    environment:
      DOCKER_HOST_IP:
      ETCD_HOST_PORT: ${DOCKER_HOST_IP}:4001
      PATRONI_SCOPE: test-cluster-scope
      TEST_VOLUME: /test-volume
      AWS_ACCESS_KEY_ID: ~
      AWS_SECRET_ACCESS_KEY: ~
      WAL_S3_BUCKET: ~
      AWS_REGION: ~
      APPUSER_USERNAME: appuser-username
      APPUSER_PASSWORD: appuser-password
      SUPERUSER_USERNAME: superuser-username
      SUPERUSER_PASSWORD: superuser-password
      ADMIN_PASSWORD: admin-password
